version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    environment:
      - "SA_PASSWORD=${DB_SA_PASSWORD}"
      - ACCEPT_EULA=Y
    volumes:
      - ./db/data/:/var/opt/mssql/data/
      - ./db/log/:/var/opt/mssql/log/
      - ./db/secrets/:/var/opt/mssql/secrets/
    ports:
      - 1433:1433
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DB_SA_PASSWORD} -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  mssql.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
    depends_on:
      mssql:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P ${DB_SA_PASSWORD} -d master -v KafkaPassword=${DB_PASSWORD} -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '
  
  # producers:
  #   build:
  #     dockerfile: ./producers/Dockerfile
  #   depends_on:
  #     - kafka

  # consumers:
  #   build:
  #     dockerfile: ./consumers/Dockerfile
  #   depends_on:
  #     - kafka